{"ast":null,"code":"var _jsxFileName = \"/home/julio/ReactProjects/assignment03-film-project-p1/src/FilmLibrary.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport FilmDetail from \"./FilmDetail\";\nimport './FilmLibrary.css';\nimport FilmRow from \"./FilmRow\";\nimport TMDB from \"./TMDB\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FilmLibrary() {\n  _s();\n\n  const [selectedFilm, setSelectedFilm] = useState(TMDB.films[0]);\n  const [favFilm, setFavFilm] = useState(null);\n\n  const onSelectedFilm = index => {\n    console.log(index);\n    setSelectedFilm(TMDB.films[index]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FilmLibrary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"film-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: \"FILMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"film-list-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"film-list-filter is-active\",\n          children: [\"ALL\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-count\",\n            children: TMDB.films.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"film-list-filter\",\n          children: [\"FAVES\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-count\",\n            children: favFilm === null ? '0' : favFilm.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), TMDB.films.map((film, index) => /*#__PURE__*/_jsxDEV(FilmRow, {\n        imgURL: film.poster_path,\n        title: film.title,\n        year: new Date(film.release_date).getFullYear(),\n        handleSelectedFilm: () => onSelectedFilm(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"film-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: selectedFilm.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilmDetail, {\n        title: selectedFilm.title,\n        overview: selectedFilm.overview,\n        poster_path: selectedFilm.poster_path,\n        backdrop_path: selectedFilm.backdrop_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilmLibrary, \"9+ADmhmust7CAqEPZO056fxmTGA=\");\n\n_c = FilmLibrary;\nexport default FilmLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmLibrary\");","map":{"version":3,"names":["useState","FilmDetail","FilmRow","TMDB","FilmLibrary","selectedFilm","setSelectedFilm","films","favFilm","setFavFilm","onSelectedFilm","index","console","log","length","map","film","poster_path","title","Date","release_date","getFullYear","overview","backdrop_path"],"sources":["/home/julio/ReactProjects/assignment03-film-project-p1/src/FilmLibrary.js"],"sourcesContent":["import { useState } from \"react\";\nimport FilmDetail from \"./FilmDetail\";\nimport './FilmLibrary.css';\nimport FilmRow from \"./FilmRow\";\nimport TMDB from \"./TMDB\";\n\nfunction FilmLibrary() {\n  \n  const [selectedFilm, setSelectedFilm] = useState(TMDB.films[0])\n  const [favFilm, setFavFilm] =  useState(null)\n\n  const onSelectedFilm = index => {\n    console.log(index)\n    setSelectedFilm(TMDB.films[index])\n  }\n    \n  return (\n    <div className=\"FilmLibrary\">\n      <div className=\"film-list\">\n        <h1 className=\"section-title\">FILMS</h1>\n        <div className=\"film-list-filters\">\n          <button className=\"film-list-filter is-active\">\n            ALL\n            <span className=\"section-count\">{TMDB.films.length}</span>\n          </button>\n          <button className=\"film-list-filter\">\n            FAVES\n            <span className=\"section-count\">{favFilm === null ? '0' : favFilm.length}</span>\n          </button>\n        </div>\n        {TMDB.films.map((film, index) =>\n          <FilmRow key={index}\n              imgURL={film.poster_path}\n              title={film.title}\n              year={new Date(film.release_date).getFullYear()}\n              handleSelectedFilm={()=>onSelectedFilm(index)}\n          />        \n        )}\n        \n      </div>\n\n      <div className=\"film-details\">\n        <h1 className=\"section-title\">{selectedFilm.title}</h1>\n        <FilmDetail\n            title={selectedFilm.title}\n            overview={selectedFilm.overview}\n            poster_path={selectedFilm.poster_path}\n            backdrop_path={selectedFilm.backdrop_path}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default FilmLibrary"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EAErB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACG,IAAI,CAACI,KAAL,CAAW,CAAX,CAAD,CAAhD;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;;EAEA,MAAMU,cAAc,GAAGC,KAAK,IAAI;IAC9BC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACAL,eAAe,CAACH,IAAI,CAACI,KAAL,CAAWI,KAAX,CAAD,CAAf;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,eAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACE;UAAQ,SAAS,EAAC,4BAAlB;UAAA,+BAEE;YAAM,SAAS,EAAC,eAAhB;YAAA,UAAiCR,IAAI,CAACI,KAAL,CAAWO;UAA5C;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAQ,SAAS,EAAC,kBAAlB;UAAA,iCAEE;YAAM,SAAS,EAAC,eAAhB;YAAA,UAAiCN,OAAO,KAAK,IAAZ,GAAmB,GAAnB,GAAyBA,OAAO,CAACM;UAAlE;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAYGX,IAAI,CAACI,KAAL,CAAWQ,GAAX,CAAe,CAACC,IAAD,EAAOL,KAAP,kBACd,QAAC,OAAD;QACI,MAAM,EAAEK,IAAI,CAACC,WADjB;QAEI,KAAK,EAAED,IAAI,CAACE,KAFhB;QAGI,IAAI,EAAE,IAAIC,IAAJ,CAASH,IAAI,CAACI,YAAd,EAA4BC,WAA5B,EAHV;QAII,kBAAkB,EAAE,MAAIX,cAAc,CAACC,KAAD;MAJ1C,GAAcA,KAAd;QAAA;QAAA;QAAA;MAAA,QADD,CAZH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAwBE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAI,SAAS,EAAC,eAAd;QAAA,UAA+BN,YAAY,CAACa;MAA5C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QACI,KAAK,EAAEb,YAAY,CAACa,KADxB;QAEI,QAAQ,EAAEb,YAAY,CAACiB,QAF3B;QAGI,WAAW,EAAEjB,YAAY,CAACY,WAH9B;QAII,aAAa,EAAEZ,YAAY,CAACkB;MAJhC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA9CQnB,W;;KAAAA,W;AAgDT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}